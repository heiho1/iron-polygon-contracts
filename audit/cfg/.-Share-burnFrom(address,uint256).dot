digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
decreasedAllowance = allowance(account,_msgSender()).sub(amount,ERC20: burn amount exceeds allowance)

IRs:
TMP_798(address) = INTERNAL_CALL, Context._msgSender()()
TMP_799(uint256) = INTERNAL_CALL, ERC20Custom.allowance(address,address)(account,TMP_798)
TMP_800(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['TMP_799', 'amount', 'ERC20: burn amount exceeds allowance'] 
decreasedAllowance(uint256) := TMP_800(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_approve(account,_msgSender(),decreasedAllowance)

IRs:
TMP_801(address) = INTERNAL_CALL, Context._msgSender()()
INTERNAL_CALL, ERC20Custom._approve(address,address,uint256)(account,TMP_801,decreasedAllowance)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_burn(account,amount)

IRs:
INTERNAL_CALL, ERC20Custom._burn(address,uint256)(account,amount)"];
}
