digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->6;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
unclaimedRewards = getUnclaimedIncentiveRewardsBalance()

IRs:
TMP_1623(uint256) = INTERNAL_CALL, TreasuryVaultAave.getUnclaimedIncentiveRewardsBalance()()
unclaimedRewards(uint256) := TMP_1623(uint256)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
_tokens = new address[](1)

IRs:
TMP_1625 = new address[](1)
_tokens(address[]) := TMP_1625(address)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
_tokens[0] = address(aToken)

IRs:
REF_418(address) -> _tokens[0]
TMP_1626 = CONVERT aToken to address
REF_418 (->_tokens) := TMP_1626(address)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
AaveIncentivesController.claimRewards(_tokens,unclaimedRewards,msg.sender)

IRs:
TMP_1627(uint256) = HIGH_LEVEL_CALL, dest:AaveIncentivesController(IAaveIncentivesController), function:claimRewards, arguments:['_tokens', 'unclaimedRewards', 'msg.sender']  "];
4->5;
5[label="Node Type: EXPRESSION 5

EXPRESSION:
IncentivesClaimed(unclaimedRewards)

IRs:
Emit IncentivesClaimed(unclaimedRewards)"];
6[label="Node Type: EXPRESSION 6

EXPRESSION:
onlyOwner()

IRs:
MODIFIER_CALL, Ownable.onlyOwner()()"];
6->1;
}
