digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
blockTimestamp = currentBlockTimestamp()

IRs:
TMP_1443(uint32) = INTERNAL_CALL, PcsPairOracle.currentBlockTimestamp()()
blockTimestamp(uint32) := TMP_1443(uint32)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
uniswapPair = IUniswapLP(_pair)

IRs:
TMP_1444 = CONVERT _pair to IUniswapLP
uniswapPair(IUniswapLP) := TMP_1444(IUniswapLP)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
price0Cumulative = uniswapPair.price0CumulativeLast()

IRs:
TMP_1445(uint256) = HIGH_LEVEL_CALL, dest:uniswapPair(IUniswapLP), function:price0CumulativeLast, arguments:[]  
price0Cumulative(uint256) := TMP_1445(uint256)"];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
price1Cumulative = uniswapPair.price1CumulativeLast()

IRs:
TMP_1446(uint256) = HIGH_LEVEL_CALL, dest:uniswapPair(IUniswapLP), function:price1CumulativeLast, arguments:[]  
price1Cumulative(uint256) := TMP_1446(uint256)"];
4->5;
5[label="Node Type: NEW VARIABLE 5
"];
5->6;
6[label="Node Type: NEW VARIABLE 6
"];
6->7;
7[label="Node Type: NEW VARIABLE 7
"];
7->8;
8[label="Node Type: EXPRESSION 8

EXPRESSION:
(reserve0,reserve1,_blockTimestampLast) = uniswapPair.getReserves()

IRs:
TUPLE_12(uint112,uint112,uint32) = HIGH_LEVEL_CALL, dest:uniswapPair(IUniswapLP), function:getReserves, arguments:[]  
reserve0(uint112)= UNPACK TUPLE_12 index: 0 
reserve1(uint112)= UNPACK TUPLE_12 index: 1 
_blockTimestampLast(uint32)= UNPACK TUPLE_12 index: 2 "];
8->9;
9[label="Node Type: IF 9

EXPRESSION:
_blockTimestampLast != blockTimestamp

IRs:
TMP_1447(bool) = _blockTimestampLast != blockTimestamp
CONDITION TMP_1447"];
9->10[label="True"];
9->13[label="False"];
10[label="Node Type: NEW VARIABLE 10

EXPRESSION:
timeElapsed = blockTimestamp - _blockTimestampLast

IRs:
TMP_1448(uint32) = blockTimestamp (c)- _blockTimestampLast
timeElapsed(uint32) := TMP_1448(uint32)"];
10->11;
11[label="Node Type: EXPRESSION 11

EXPRESSION:
price0Cumulative += uint256(FixedPoint.fraction(reserve1,reserve0)._x) * timeElapsed

IRs:
TMP_1449(FixedPoint.uq112x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.fraction(uint112,uint112), arguments:['reserve1', 'reserve0'] 
REF_389(uint224) -> TMP_1449._x
TMP_1450 = CONVERT REF_389 to uint256
TMP_1451(uint256) = TMP_1450 (c)* timeElapsed
price0Cumulative(uint256) = price0Cumulative (c)+ TMP_1451"];
11->12;
12[label="Node Type: EXPRESSION 12

EXPRESSION:
price1Cumulative += uint256(FixedPoint.fraction(reserve0,reserve1)._x) * timeElapsed

IRs:
TMP_1452(FixedPoint.uq112x112) = LIBRARY_CALL, dest:FixedPoint, function:FixedPoint.fraction(uint112,uint112), arguments:['reserve0', 'reserve1'] 
REF_391(uint224) -> TMP_1452._x
TMP_1453 = CONVERT REF_391 to uint256
TMP_1454(uint256) = TMP_1453 (c)* timeElapsed
price1Cumulative(uint256) = price1Cumulative (c)+ TMP_1454"];
12->13;
13[label="Node Type: END_IF 13
"];
}
