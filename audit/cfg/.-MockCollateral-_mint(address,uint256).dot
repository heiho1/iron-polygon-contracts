digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
_balance[dst] = add(_balance[dst],amt)

IRs:
REF_5(uint256) -> _balance[dst]
REF_6(uint256) -> _balance[dst]
TMP_15(uint256) = INTERNAL_CALL, MockCollateral.add(uint256,uint256)(REF_6,amt)
REF_5 (->_balance) := TMP_15(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_totalSupply = add(_totalSupply,amt)

IRs:
TMP_16(uint256) = INTERNAL_CALL, MockCollateral.add(uint256,uint256)(_totalSupply,amt)
_totalSupply(uint256) := TMP_16(uint256)"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
Transfer(address(0),dst,amt)

IRs:
TMP_17 = CONVERT 0 to address
Emit Transfer(TMP_17.dst.amt)"];
}
