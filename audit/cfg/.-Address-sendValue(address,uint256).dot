digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: EXPRESSION 1

EXPRESSION:
require(bool,string)(address(this).balance >= amount,Address: insufficient balance)

IRs:
TMP_108 = CONVERT this to address
REF_39 -> BALANCE TMP_108
TMP_109(bool) = REF_39 >= amount
TMP_110(None) = SOLIDITY_CALL require(bool,string)(TMP_109,Address: insufficient balance)"];
1->2;
2[label="Node Type: NEW VARIABLE 2
"];
2->3;
3[label="Node Type: EXPRESSION 3

EXPRESSION:
(success) = recipient.call{value: amount}()

IRs:
TUPLE_0(bool,bytes) = LOW_LEVEL_CALL, dest:recipient, function:call, arguments:[''] value:amount 
success(bool)= UNPACK TUPLE_0 index: 0 "];
3->4;
4[label="Node Type: EXPRESSION 4

EXPRESSION:
require(bool,string)(success,Address: unable to send value, recipient may have reverted)

IRs:
TMP_111(None) = SOLIDITY_CALL require(bool,string)(success,Address: unable to send value, recipient may have reverted)"];
}
