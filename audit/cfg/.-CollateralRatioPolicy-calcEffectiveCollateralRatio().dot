digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: IF 1

EXPRESSION:
! using_effective_collateral_ratio

IRs:
TMP_176 = ! using_effective_collateral_ratio 
CONDITION TMP_176"];
1->2[label="True"];
1->3[label="False"];
2[label="Node Type: RETURN 2

EXPRESSION:
target_collateral_ratio

IRs:
RETURN target_collateral_ratio"];
3[label="Node Type: END_IF 3
"];
3->4;
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
total_collateral_value = ITreasury(treasury).globalCollateralValue()

IRs:
TMP_177 = CONVERT treasury to ITreasury
TMP_178(uint256) = HIGH_LEVEL_CALL, dest:TMP_177(ITreasury), function:globalCollateralValue, arguments:[]  
total_collateral_value(uint256) := TMP_178(uint256)"];
4->5;
5[label="Node Type: NEW VARIABLE 5

EXPRESSION:
total_supply_dollar = IERC20(dollar).totalSupply()

IRs:
TMP_179 = CONVERT dollar to IERC20
TMP_180(uint256) = HIGH_LEVEL_CALL, dest:TMP_179(IERC20), function:totalSupply, arguments:[]  
total_supply_dollar(uint256) := TMP_180(uint256)"];
5->6;
6[label="Node Type: NEW VARIABLE 6

EXPRESSION:
ecr = total_collateral_value.mul(PRICE_PRECISION).div(total_supply_dollar)

IRs:
TMP_181(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['total_collateral_value', 'PRICE_PRECISION'] 
TMP_182(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_181', 'total_supply_dollar'] 
ecr(uint256) := TMP_182(uint256)"];
6->7;
7[label="Node Type: IF 7

EXPRESSION:
ecr > COLLATERAL_RATIO_MAX

IRs:
TMP_183(bool) = ecr > COLLATERAL_RATIO_MAX
CONDITION TMP_183"];
7->8[label="True"];
7->9[label="False"];
8[label="Node Type: RETURN 8

EXPRESSION:
COLLATERAL_RATIO_MAX

IRs:
RETURN COLLATERAL_RATIO_MAX"];
9[label="Node Type: END_IF 9
"];
9->10;
10[label="Node Type: RETURN 10

EXPRESSION:
ecr

IRs:
RETURN ecr"];
}
