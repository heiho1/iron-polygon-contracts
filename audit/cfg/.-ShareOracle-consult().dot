digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
_priceTokenToUsd = priceTokenToUsd()

IRs:
TMP_1471(uint256) = INTERNAL_CALL, ShareOracle.priceTokenToUsd()()
_priceTokenToUsd(uint256) := TMP_1471(uint256)"];
1->2;
2[label="Node Type: NEW VARIABLE 2

EXPRESSION:
_priceShareToToken = IPairOracle(oracleShare).consult(share,PRICE_PRECISION)

IRs:
TMP_1472 = CONVERT oracleShare to IPairOracle
TMP_1473(uint256) = HIGH_LEVEL_CALL, dest:TMP_1472(IPairOracle), function:consult, arguments:['share', 'PRICE_PRECISION']  
_priceShareToToken(uint256) := TMP_1473(uint256)"];
2->3;
3[label="Node Type: RETURN 3

EXPRESSION:
(_priceTokenToUsd * _priceShareToToken) / PRICE_PRECISION

IRs:
TMP_1474(uint256) = _priceTokenToUsd (c)* _priceShareToToken
TMP_1475(uint256) = TMP_1474 (c)/ PRICE_PRECISION
RETURN TMP_1475"];
}
