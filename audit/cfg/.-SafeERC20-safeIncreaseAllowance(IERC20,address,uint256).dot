digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
newAllowance = token.allowance(address(this),spender) + value

IRs:
TMP_90 = CONVERT this to address
TMP_91(uint256) = HIGH_LEVEL_CALL, dest:token(IERC20), function:allowance, arguments:['TMP_90', 'spender']  
TMP_92(uint256) = TMP_91 (c)+ value
newAllowance(uint256) := TMP_92(uint256)"];
1->2;
2[label="Node Type: EXPRESSION 2

EXPRESSION:
_callOptionalReturn(token,abi.encodeWithSelector(token.approve.selector,spender,newAllowance))

IRs:
REF_30 (->None) := 157198259(uint256)
TMP_93(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_30,spender,newAllowance)
INTERNAL_CALL, SafeERC20._callOptionalReturn(IERC20,bytes)(token,TMP_93)"];
}
