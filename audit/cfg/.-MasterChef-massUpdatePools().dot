digraph{
0[label="Node Type: ENTRY_POINT 0
"];
0->1;
1[label="Node Type: NEW VARIABLE 1

EXPRESSION:
length = poolInfo.length

IRs:
REF_169 -> LENGTH poolInfo
length(uint256) := REF_169(uint256)"];
1->4;
2[label="Node Type: BEGIN_LOOP 2
"];
2->5;
3[label="Node Type: END_LOOP 3
"];
4[label="Node Type: NEW VARIABLE 4

EXPRESSION:
pid = 0

IRs:
pid(uint256) := 0(uint256)"];
4->2;
5[label="Node Type: IF_LOOP 5

EXPRESSION:
pid < length

IRs:
TMP_549(bool) = pid < length
CONDITION TMP_549"];
5->6[label="True"];
5->3[label="False"];
6[label="Node Type: EXPRESSION 6

EXPRESSION:
updatePool(pid)

IRs:
INTERNAL_CALL, MasterChef.updatePool(uint256)(pid)"];
6->7;
7[label="Node Type: EXPRESSION 7

EXPRESSION:
++ pid

IRs:
pid(uint256) = pid (c)+ 1"];
7->5;
}
